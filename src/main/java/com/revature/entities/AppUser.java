package com.revature.entities;

import com.revature.annotations.*;

import java.util.List;


@Entity
@Table(name="users")
public class AppUser {

    /**
     * The serial id of the user
     */
    @PrimaryKey
    private int userId;
    @Column(columnName = "username")
    private String username;
    @Column(columnName = "password")
    private String password;
    @Column(columnName = "first_name")
    private String firstName;
    @Column(columnName = "last_name")
    private String lastName;
    @Column(columnName = "email")
    private String email;
    @Column(columnName = "age")
    private int age;

// Will user Id be generated by DB as serial primary key? - Everett
//    private int userID;
//    /**
//     * Holds a list of tasks that the User has on their created
//     */
//    @ManyToMany
//    @JoinTable(
//            name = "user_tasks",
//            joinColumns = @JoinColumn(name = "user_id"),
//            inverseJoinColumns = @JoinColumn(name = "task_id")
//    //create join method for primary key and foreign key?

    private List<TaskList> taskList;

    public AppUser(String username, String password, String email, String firstName, String lastName){ }


    /**
     * Constructor for initializing username, password, email, firstname, and lastname
     * @param username the username of the user
     * @param password the password of the user
     * @param email the email of the user
     * @param firstName the firstname of the user
     * @param lastName the lastname of the user
     * @param age the age of the user
     */

    public AppUser(String username, String password, String firstName, String lastName, String email, int age) {
        this.username = username;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.age = age;
        //taskList = new Vector<>(); tbd
    }


    /**
     * Constructor for initializing user's id, username, password, email, firstname, lastname, and role
     * @param userId the user id
     * @param username the username of the user
     * @param password the password of the user
     * @param email email of the user
     * @param firstName the firstname of the user
     * @param lastName the lastname of the user
     * @param age the age of the user
     *
     */
    public AppUser(int userId, String username, String password, String email, String firstName, String lastName, int age) {
        this(username, password, email, firstName, lastName, age);
        this.userId = userId;
    }


    /**
     * Constructor for initializing user's id, username, password, email, firstname, lastname, and role
     * @param userId the user id
     * @param username the username of the user
     * @param password the password of the user
     * @param email email of the user
     * @param firstName the firstname of the user
     * @param lastName the lastname of the user
     * @param age the age of the user
     * @param taskList the taskList for this user
     */
    public AppUser(int userId, String username, String password, String email, String firstName, String lastName, int age, List<TaskList> taskList) {
        this(userId, username, password, email, firstName, lastName, age);
        this.taskList = taskList;
    }


    public AppUser(AppUser user) {
        this(user.userId, user.username, user.password, user.email, user.firstName, user.lastName, user.age, user.taskList);
    }


    public int getUserId() {
        return userId;
    }

    public void setUserId(int userID) {
        this.userId = userID;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public List<TaskList> getTaskList() {
        return taskList;
    }

    public void setTaskList(List<TaskList> taskList) {
        this.taskList = taskList;
    }










    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder("AppUser{");
        sb.append("userId=").append(userId);
        sb.append(", username='").append(username).append('\'');
        sb.append(", password='").append(password).append('\'');
        sb.append(", firstName='").append(firstName).append('\'');
        sb.append(", lastName='").append(lastName).append('\'');
        sb.append(", email='").append(email).append('\'');
        sb.append(", age=").append(age);
        sb.append(", taskList=").append(taskList);
        sb.append('}');
        return sb.toString();
    }
}
